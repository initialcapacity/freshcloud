name: build and release
on: push
jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18'
      - name: test
        run: |
          go test -coverprofile coverage.out  ./.../
      - name: Upload coverage to Codecov
        run: bash <(curl -s https://codecov.io/bash)

  build:
    runs-on: ubuntu-latest
    needs: test
    strategy:
      matrix:
        goosarch:
          - 'darwin/amd64'
          - 'darwin/arm64'
          - 'linux/amd64'
          - 'linux/arm64'
          - 'windows/amd64'
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-go@v2
        with:
          go-version: '^1.18'
      - name: arch
        run: |
          GOOSARCH=${{matrix.goosarch}}
          GOOS=${GOOSARCH%/*}
          GOARCH=${GOOSARCH#*/}
          BINARY_NAME=freshctl-$GOOS-$GOARCH
          echo "BINARY_NAME=$BINARY_NAME" >> $GITHUB_ENV
          echo "GOOS=$GOOS" >> $GITHUB_ENV
          echo "GOARCH=$GOARCH" >> $GITHUB_ENV
      - name: build
        run: |
          go build -o "$BINARY_NAME" cmd/freshctl.go
      - name: Save artifact
        uses: actions/upload-artifact@v3
        with:
          name: ${{env.BINARY_NAME}}
          path: ${{env.BINARY_NAME}}

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: freshctl-darwin-arm64

      - name: Display structure of downloaded files
        run: ls -R

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y%m%d%H%M')"

      - name: Create release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.date.outputs.date }}
          release_name: Release v${{ steps.date.outputs.date }}
          draft: false
          prerelease: false

      - name: Upload Release arm64 Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./freshctl-darwin-arm64
          asset_name: freshctl-darwin-arm64
          asset_content_type: application/octet-stream
