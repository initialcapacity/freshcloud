function wait_for_cert_manager() {
    echo "Waiting for pods in cert-manager to become ready."
    while true; do
        STATUS=$(kubectl get pods -n cert-manager | egrep -v 'Running|NAME|Completed')
        if [ -z "$STATUS" ]; then
            break
        fi
    done
    echo "All pods are running."
}
kubectl create namespace cert-manager
helm repo add jetstack https://charts.jetstack.io
helm repo update
helm install cert-manager jetstack/cert-manager --namespace cert-manager \
    --version v1.0.2 --set installCRDs=true
if [ $? != 0 ]; then
    echo "Failed to install Cert-Manager. Bummer"
    exit 1
fi
wait_for_cert_manager
sleep 10
cat <<EOF | kubectl apply -f -
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
    name: letsencrypt-staging
spec:
    acme:
        email: {{.EmailAddress}}
        privateKeySecretRef:
            name: letsencrypt-staging
        server: https://acme-staging-v02.api.letsencrypt.org/directory
        solvers:
            - http01:
                ingress:
                    class: contour
EOF
cat <<EOF | kubectl apply -f -
apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
    name: letsencrypt-prod
spec:
    acme:
        email: {{.EmailAddress}}
        privateKeySecretRef:
            name: letsencrypt-prod
        server: https://acme-v02.api.letsencrypt.org/directory
        solvers:
            - http01:
                ingress:
                    class: contour
EOF